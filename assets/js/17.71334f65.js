(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{504:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("目录")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1-浏览器渲染页面"}},[t._v("1.  浏览器渲染页面")])]),a("li",[a("a",{attrs:{href:"#_2-渲染树"}},[t._v("2.  渲染树")])]),a("li",[a("a",{attrs:{href:"#_3-dom和cssom的具体构建流程"}},[t._v("3. DOM和CSSOM的具体构建流程")])]),a("li",[a("a",{attrs:{href:"#_4-阻塞渲染-css-与-javascript"}},[t._v("4.  阻塞渲染：CSS 与 JavaScript")])]),a("li",[a("a",{attrs:{href:"#_5-改变阻塞模式-async-异步下载-和-defer-延迟执行"}},[t._v("5.  改变阻塞模式：async（异步下载） 和 defer（延迟执行）")])]),a("li",[a("a",{attrs:{href:"#_6-vue中的异步渲染-nexttick"}},[t._v("6. Vue中的异步渲染： nextTick")])]),a("li",[a("a",{attrs:{href:"#_7-重排-reflow-、-重绘-repaint"}},[t._v("7.   重排(reflow)、 重绘(repaint)")])])])]),a("p"),t._v(" "),a("hr"),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_1-浏览器渲染页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器渲染页面"}},[t._v("#")]),t._v(" 1.  浏览器渲染页面")]),t._v(" "),a("p",[t._v("浏览器渲染页面的过程：")]),t._v(" "),a("ol",[a("li",[t._v("DNS 查询")]),t._v(" "),a("li",[t._v("TCP 连接")]),t._v(" "),a("li",[t._v("HTTP 请求即响应")]),t._v(" "),a("li",[t._v("服务器响应")]),t._v(" "),a("li",[t._v("客户端渲染")])]),t._v(" "),a("p",[t._v("客户端渲染【浏览器对内容的渲染】进程如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/202010101640524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ltYWdlX2Z6eA==,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("hr"),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_2-渲染树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-渲染树"}},[t._v("#")]),t._v(" 2.  渲染树")]),t._v(" "),a("p",[t._v("当我们生成 DOM 树和 CSSOM 树以后，就需要将这两棵树组合为渲染树。")]),t._v(" "),a("p",[t._v("渲染树只会包括需要显示的节点和这些节点的样式信息，如果某个节点是 display: none 的，那么就不会在渲染树中显示。")]),t._v(" "),a("p",[t._v("工作流程：==构建 DOM -> 构建 CSSOM -> 构建渲染树 -> 布局 -> 绘制==")]),t._v(" "),a("blockquote",[a("p",[t._v("处理 HTML 标记并构建 DOM 树。\n处理 CSS 标记并构建 CSSOM 树。\n将 DOM 与 CSSOM 合并成一个渲染树。\n根据渲染树来布局，以计算每个节点的几何信息。\n将各个节点绘制到屏幕上。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201010173234607.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ltYWdlX2Z6eA==,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("hr"),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_3-dom和cssom的具体构建流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-dom和cssom的具体构建流程"}},[t._v("#")]),t._v(" 3. DOM和CSSOM的具体构建流程")]),t._v(" "),a("p",[t._v('DOM 和 CSSOM 都是以" Bytes → characters → tokens → nodes → object model. " 这样的方式生成最终的数据')]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201011145515991.png#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("ol",[a("li",[t._v("当服务器返回一个HTML文件给浏览器的时候，浏览器接受到的是一些字节数据；")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v('<meta http-equiv="content-type"content="text/html;charset=utf-8">')]),t._v("来告诉浏览器页面使用的是什么编码；")]),t._v(" "),a("li",[t._v("使用这些语义块(token)创建对象，形成一个个节点；")]),t._v(" "),a("li",[t._v("HTML解析器就会从HTML文件的头部到尾部，一个个地遍历这些节点。普通节点加入到DOM树中，节点是JS代码则交给JS解析器，节点是CSS代码则交给CSS解析器；")]),t._v(" "),a("li",[t._v("当HTML解析器读到最后一个节点的时候，整个DOM树也构建完成了，这个时候就会触发domContentloaded事件。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201011145303410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ltYWdlX2Z6eA==,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("blockquote",[a("p",[t._v("注： DOM树要小，CSS尽量用id和class，千万不要过渡层叠下去，CSS的加载速度与构建CSSOM的速度将直接影响首屏渲染速度")])]),t._v(" "),a("hr"),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_4-阻塞渲染-css-与-javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-阻塞渲染-css-与-javascript"}},[t._v("#")]),t._v(" 4.  阻塞渲染：CSS 与 JavaScript")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201011145658568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ltYWdlX2Z6eA==,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("ul",[a("li",[t._v("==JS 文件不只是阻塞 DOM 的构建，它会导致 CSSOM 也阻塞 DOM 的构建==")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("当浏览器遇到一个 script 标记时，DOM 构建将暂停，直至脚本完成执行。")])]),t._v(" "),a("li",[a("p",[t._v("JavaScript 可以查询和修改 DOM 与 CSSOM。")])]),t._v(" "),a("li",[a("p",[t._v("CSSOM 构建时，JavaScript 执行将暂停，直至 CSSOM 就绪。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201011150125282.png#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("==CSS 优先：引入顺序上，CSS 资源先于 JavaScript 资源。==")]),t._v(" "),a("hr"),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_5-改变阻塞模式-async-异步下载-和-defer-延迟执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-改变阻塞模式-async-异步下载-和-defer-延迟执行"}},[t._v("#")]),t._v(" 5.  改变阻塞模式：async（异步下载） 和 defer（延迟执行）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201010191044421.png#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("蓝色线代表 JavaScript 加载；红色线代表 JavaScript 执行；绿色线代表 HTML 解析。\n蓝色线代表网络读取，红色线代表执行时间，这俩都是针对脚本的；绿色线代表 HTML 解析")]),t._v(" "),a("ul",[a("li",[t._v("情况 1： "),a("code",[t._v('<script src="script.js"><\/script>')])])]),t._v(" "),a("blockquote",[a("p",[t._v("没有 defer 或 async，浏览器会立即加载并执行指定的脚本，也就是说不等待后续载入的文档元素，读到就加载并执行。")])]),t._v(" "),a("ul",[a("li",[t._v("情况 2： "),a("code",[t._v('<script async src="script.js"><\/script>')]),t._v("\t  (异步下载)")])]),t._v(" "),a("blockquote",[a("p",[t._v("async ，与 defer 的区别在于，如果已经加载好，就会开始执行，无论此刻是 HTML 解析阶段还是 DOMContentLoaded 触发之后。\n这种方式加载的 JavaScript 依然会阻塞 load 事件。换句话说，async-script 可能在 DOMContentLoaded 触发之前或之后执行，但一定在 load 触发之前执行。")])]),t._v(" "),a("ul",[a("li",[t._v("情况 3： "),a("code",[t._v('<script defer src="script.js"><\/script>')]),t._v("   (延迟执行)")])]),t._v(" "),a("blockquote",[a("p",[t._v("在遇到设置有defer属性的"),a("code",[t._v("<script>")]),t._v("标签时，解析器不会停止解析HTML代码，而是去另外开启一个线程下载延迟脚本；在HTML文档解析完成后，才开始执行该脚本")])]),t._v(" "),a("p",[t._v("==defer 与相比普通 script，有两点区别：==")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("载入 JavaScript 文件时不阻塞 HTML 的解析，执行阶段被放到 HTML 标签解析完成之后。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("在加载多个 JS 脚本的时候，\nasync 是无顺序的加载， 而 defer 是有顺序的加载。")])])])]),t._v(" "),a("p",[t._v("==注意点==")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("对于内置而不是加载外部脚本的script标签，以及动态生成的script标签，defer属性不起作用。另外，使用defer和async属性加载的外部脚本都不应该使用document.write方法。")])]),t._v(" "),a("li",[a("p",[t._v("一般来说，如果异步脚本之间没有依赖关系，执行的先后顺序不影响整个页面，那么建议使用async属性；如果异步脚本之间有依赖关系就使用defer属性。")])]),t._v(" "),a("li",[a("p",[t._v("如果同时使用async属性和defer属性，defer属性失效，浏览器的行为由async决定。")])])]),t._v(" "),a("hr"),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_6-vue中的异步渲染-nexttick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-vue中的异步渲染-nexttick"}},[t._v("#")]),t._v(" 6. Vue中的异步渲染： nextTick")]),t._v(" "),a("p",[t._v("官方文档：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://vue-js.com/learn-vue/instanceMethods/lifecycle.html#_3-vm-nexttick",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://vue-js.com/learn-vue/instanceMethods/lifecycle.html#_3-vm-nexttick"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("概念\n在下次 DOM 更新循环结束之后执行延迟回调。在修改数据之后立即使用这个方法，获取更新后的 DOM。")]),t._v(" "),a("p",[t._v("原理：\nvue更新dom是异步的执行，当监听到数据变化（利用objeect.defineProperty）的时候开启一个队列，并缓冲在同一事件循环中发生的所有数据变更。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//改变数据")]),t._v("\nvm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'changed'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//想要立即使用更新后的DOM。这样不行，因为设置message后DOM还没有更新")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并不会得到'changed'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这样可以，nextTick里面的代码会在DOM更新后执行")]),t._v("\nVue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以得到'changed'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201011145910799.png#pic_center",alt:"在这里插入图片描述"}})]),t._v(" "),a("p",[t._v("宏任务(macro task) 有 setTimeout、MessageChannel、postMessage、setImmediate；\n微任务(micro task）有MutationObsever 和 Promise.then。")]),t._v(" "),a("p",[t._v("根据浏览器兼容性的不同，nextTick选用了四种异步api，\n优先级(Promise > MutationObserver > setImmediate > setTimeout)前两种是微任务，后两种是宏任务，nextTick为了更快执行，首先选用微任务，只有当浏览器不兼容才会采取宏任务方式")]),t._v(" "),a("p",[t._v("通过 Vue.nextTick 获取到改变后的 DOM 。通过 setTimeout(fn, 0) 也可以同样获取到。")]),t._v(" "),a("img",{attrs:{src:"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9YRWdEb1dpYlRwZjJXejdWaWNWMWlidkRITXNjYk43R1p0eFZwaWJGWjBSSHBFSWFnYjlJZlhrbGlhSmliVnplOU90aWFXdFdLa29BTm1vVlJCWGNTcU95cGNxT0EvNjQw?x-oss-process=image/format,png",alt:"异步渲染"}}),t._v(" "),a("p",[t._v("参考： "),a("a",{attrs:{href:"https://www.cnblogs.com/aeipyuan/p/12638597.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/aeipyuan/p/12638597.html"),a("OutboundLink")],1)]),t._v(" "),a("hr"),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_7-重排-reflow-、-重绘-repaint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-重排-reflow-、-重绘-repaint"}},[t._v("#")]),t._v(" 7.   重排(reflow)、 重绘(repaint)")]),t._v(" "),a("ul",[a("li",[t._v("Repaint ---- 重绘\n改变某个元素的背景色、文字颜色、边框颜色等等不影响它周围或内部布局的属性时，屏幕的一部分要重画，但是元素的几何尺寸没有变。")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("color    \t\tvisibility  \t\ttext"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("decoration\t\t\tbackground"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("size\nbackground \t\tbackground"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("image \tbackground"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("position\t\tbackground"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("repeat \t\t\noutline \t\toutline"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("color\t\toutline"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("style  \t \t\toutline"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width \nborder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("radius \tbox"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shadow \t\t    border"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("style \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[t._v("Reflow --- 重排也叫回流\n元件的几何尺寸变了，我们需要重新验证并计算Render Tree。是Render Tree的一部分或全部发生了变化。")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("引起重排：\n\n页面首次渲染。\n浏览器窗口大小发生改变。\n元素尺寸或位置发生改变。\n元素内容变化（文字数量或图片大小等等）。\n元素字体大小变化。\n添加或者删除可见的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("元素。\n激活"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("伪类（例如："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("hover）。\n设置style属性\n查询某些属性或调用某些方法。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("p",[t._v("==性能提升：==")]),t._v(" "),a("p",[t._v("1， display:none会触发reflow，而visibility:hidden只会触发repaint，因为没有发现位置变化；")]),t._v(" "),a("p",[t._v("2，translate属性值来替换top/left/right/bottom的切换，scale属性值替换width/height，opacity属性替换display/visibility等等；")]),t._v(" "),a("p",[t._v("3，动画实现的速度的选择，动画速度越快，回流次数越多，也可以选择使用 requestAnimationFrame；")]),t._v(" "),a("p",[t._v("4，如果真的有特别耗时且不操作DOM元素的纯计算JS工作，可以考虑放到Web Workers中执行。")])])}),[],!1,null,null,null);s.default=n.exports}}]);